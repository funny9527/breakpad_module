apply plugin: 'com.android.application'
import org.apache.tools.ant.taskdefs.condition.Os
import org.ajoberstar.gradle.git.tasks.*

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.crash.szy.myapplication"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = []
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.2.1'
}

task cloneGitRepo(type: GitClone) {
    println("cloneGitRepo running")
    def destination = file("src/main")
    uri = "https://github.com/google/breakpad"
    destinationPath = destination
    bare = false
    enabled = !destination.exists()
}

task ndkBuild(type : Exec, description : 'compile jni via NDK') {
    println('execute ndk-build')
    def ndkdir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder().absolutePath
    def ndkpath = ndkdir
    println(ndkpath)
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        ndkpath = ndkdir + '/ndk-build.cmd'
    } else {
        ndkpath = ndkdir + '/ndk-build'
    }

    commandLine ndkpath, '-j8','-C',file('src/main/jni').absolutePath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

//ndkBuild {}.dependsOn cloneGitRepo